# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    admin.post:
        class: BlogBundle\Admin\PostAdmin

        #arguments: [~, BlogBundle\Entity\Post, ~]
        arguments:
            - ~
            - BlogBundle\Entity\Post
            - 'SonataAdminBundle:CRUD'
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Content"
              label: "Posts"

        calls:
            - [ setTranslationDomain, [App]]

        public: true

    admin.post_translation:
        class: BlogBundle\Admin\PostTranslationAdmin
        arguments:
            - ~
            - BlogBundle\Entity\PostTranslation
            - 'SonataAdminBundle:CRUD'
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "На заходи сюда!"
              label: "Post translations"

        calls:
            - [ setTranslationDomain, [App]]

        public: true

    admin.category:
        class: BlogBundle\Admin\CategoryAdmin
        arguments:
            - ~
            - BlogBundle\Entity\Category
            - 'SonataAdminBundle:CRUD'
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Content"
              label: "Categories"

        calls:
            - [ setTranslationDomain, [App]]

        public: true
