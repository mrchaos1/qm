imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BlogBundle/Resources/config/services.yml" }
    - { resource: "@AdminBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    translator: { fallbacks: ["%locale%"] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

    form_themes:
        - '@SonataFormatter/Form/formatter.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType

        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                mappings:
                    SonataMediaBundle: ~

        auto_generate_proxy_classes: '%kernel.debug%'

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }


sonata_media:
    # providers:
    #     image:
    #         resizer: sonata.media.resizer.square

    # if you don't use default namespace configuration
    class:
        media             : Application\Sonata\MediaBundle\Entity\Media
        gallery           : Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media : Application\Sonata\MediaBundle\Entity\GalleryHasMedia

    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
                preview: { width: 420, height: 270, quality: 70 }

        post:
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}


    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media" #flex
            #directory:  "%kernel.root_dir%/../web/uploads/media" #non-flex
            create:     false






sonata_block:
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]



sonata_admin:
  
    options:
        html5_validate:    true     # enable or disable html5 form validation
        confirm_exit:      true     # enable or disable a confirmation before navigating away
        use_select2:       true     # enable or disable usage of the Select2 jQuery library
        use_icheck:        true     # enable or disable usage of the iCheck library
        use_bootlint:      false    # enable or disable usage of Bootlint
        use_stickyforms:   true     # enable or disable the floating buttons
        form_type:

    templates:
        edit:              '@SonataAdmin/CRUD/edit.html.twig'
        tab_menu_template: '@SonataAdmin/Core/tab_menu_template.html.twig'

    assets:
        extra_javascripts:
            # ...
            - bundles/ivoryckeditor/ckeditor.js
            - bundles/sonataformatter/vendor/markitup-markitup/markitup/jquery.markitup.js
            - bundles/sonataformatter/markitup/sets/markdown/set.js
            - bundles/sonataformatter/markitup/sets/html/set.js
            - bundles/sonataformatter/markitup/sets/textile/set.js

        extra_stylesheets:
            # ...
            - bundles/sonataformatter/markitup/skins/sonata/style.css
            - bundles/sonataformatter/markitup/sets/markdown/style.css
            - bundles/sonataformatter/markitup/sets/html/style.css
            - bundles/sonataformatter/markitup/sets/textile/style.css










sonata_formatter:
    default_formatter: text
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions



ivory_ck_editor:
    default_config: default

    # configs:
    #     my_config:

    # plugins:
    #     autoembed:
    #         path:     "/assets/js/ckeditor_plugins/autoembed/"
    #         filename: "plugin.js"
    #
    #     autolink:
    #         path:     "/assets/js/ckeditor_plugins/autolink/"
    #         filename: "plugin.js"
    #
    #     button:
    #         path:     "/assets/js/ckeditor_plugins/button/"
    #         filename: "plugin.js"
    #
    #     clipboard:
    #         path:     "/assets/js/ckeditor_plugins/clipboard/"
    #         filename: "plugin.js"
    #
    #     dialog:
    #         path:     "/assets/js/ckeditor_plugins/dialog/"
    #         filename: "plugin.js"
    #
    #     embed:
    #         path:     "/assets/js/ckeditor_plugins/embed/"
    #         filename: "plugin.js"
    #
    #     embedbase:
    #         path:     "/assets/js/ckeditor_plugins/embedbase/"
    #         filename: "plugin.js"
    #
    #     lineutils:
    #         path:     "/assets/js/ckeditor_plugins/lineutils/"
    #         filename: "plugin.js"
    #
    #     notification:
    #         path:     "/assets/js/ckeditor_plugins/notification/"
    #         filename: "plugin.js"
    #
    #     toolbar:
    #         path:     "/assets/js/ckeditor_plugins/toolbar/"
    #         filename: "plugin.js"
    #
    #     undo:
    #         path:     "/assets/js/ckeditor_plugins/undo/"
    #         filename: "plugin.js"
    #
    #     widget:
    #         path:     "/assets/js/ckeditor_plugins/widget/"
    #         filename: "plugin.js"
    #
    #     widgetselection:
    #         path:     "/assets/js/ckeditor_plugins/widgetselection/"
    #         filename: "plugin.js"
    #
    #     notificationaggregator:
    #         path:     "/assets/js/ckeditor_plugins/notificationaggregator/"
    #         filename: "plugin.js"


    configs:
        default:
          #  embed_provider: '//ckeditor.iframe.ly/api/oembed?url={url}&callback={callback}'
          #  extraPlugins: 'embed,autoembed'
            #extraPlugins: "dialog,videoembed,wordcount,notification,notificationaggregator,widget,widgetselection,lineutils,embedbase,embedsemantic"
          #  extraPlugins: "notificationaggregator,autoembed,autolink,button,clipboard,dialog,embed,embedbase,lineutils,notification,toolbar,undo,widget,widgetselection"

            #embed_provider :
            #  - '//ckeditor.iframe.ly/api/oembed?url={url}&callback={callback}'

            #extraPlugins: "autogrow"
            height: 500
            toolbar:
              - [Iframe]
              - [Bold, Italic, Underline, -, Cut, Copy, Paste, PasteText, PasteFromWord, -, Undo, Redo, -, NumberedList, BulletedList, -, Outdent, Indent, -, Blockquote, -, Image, Link, Unlink, Table]
              - [Format, Maximize, Source]

            filebrowserBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: my-context # Optional, to upload in a custom context
                format: my-big # Optional, media format or original size returned to editor


knp_paginator:
    page_range: 5                       # number of links showed in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
    default_options:
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name: filterField  # filter field query parameter name
        filter_value_name: filterValue  # filter value query paameter name
    template:
        #pagination: '@KnpPaginator/Pagination/sliding.html.twig'     # sliding pagination controls template
        pagination    : '@KnpPaginator/Pagination/twitter_bootstrap_v4_pagination.html.twig'     # sliding pagination controls template
        sortable      : '@KnpPaginator/Pagination/sortable_link.html.twig' # sort link template
        filtration    : '@KnpPaginator/Pagination/filtration.html.twig'  # filters template
